{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\diana\\\\OneDrive\\\\Documentos\\\\react-weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\diana\\\\OneDrive\\\\Documentos\\\\react-weather-app\\\\src\\\\MainData.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./MainData.css\";\nexport default function MainData(props) {\n  let _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      temperature = _useState2[0],\n      setTemperature = _useState2[1];\n\n  let _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      icon = _useState4[0],\n      setIcon = _useState4[1];\n\n  let _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tempMax = _useState6[0],\n      setTempMax = _useState6[1];\n\n  let _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tempMin = _useState8[0],\n      setTempMin = _useState8[1];\n\n  let _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      time = _useState10[0],\n      setTime = _useState10[1];\n\n  let _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      description = _useState12[0],\n      setDescription = _useState12[1];\n\n  let _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      windSpeed = _useState14[0],\n      setWindSpeed = _useState14[1];\n\n  let _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      humidity = _useState16[0],\n      setHumidity = _useState16[1];\n\n  let _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pressure = _useState18[0],\n      setPressure = _useState18[1];\n\n  function updateTime(timestamp) {\n    let date = new Date(timestamp);\n    let days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n    let day = days[date.getDay()];\n    let hours = date.getHours();\n\n    if (hours < 10) {\n      hours = \"0\".concat(hours);\n    }\n\n    let minutes = date.getMinutes();\n\n    if (minutes < 10) {\n      minutes = \"0\".concat(minutes);\n    }\n\n    setTime(\"\".concat(day, \", \").concat(hours, \":\").concat(minutes));\n  }\n\n  function handleResponse(response) {\n    setIcon(response.data.weather[0].icon);\n    setTemperature(Math.round(response.data.main.temp));\n    setTempMax(Math.round(response.data.main.temp_max));\n    setTempMin(Math.round(response.data.main.temp_min));\n    setPressure(response.data.main.pressure);\n    setHumidity(response.data.main.humidity);\n    setDescription(response.data.weather[0].description);\n    setWindSpeed(response.data.wind.speed);\n    updateTime(response.data.dt * 1000 + response.data.timezone * 1000);\n  }\n\n  let imgUrl = \"https://openweathermap.org/img/wn/\".concat(icon, \"@2x.png\");\n  let city = \"Lisbon\";\n  let apiKey = \"1c79a9c19394dbdbf78cd6d4344cc928\";\n  let apiUrl = \"https://api.openweathermap.org/data/2.5/\";\n  let weatherApiUrl = \"\".concat(apiUrl, \"weather?q=\").concat(city, \"&appid=\").concat(apiKey, \"&units=metric\");\n  axios.get(weatherApiUrl).then(handleResponse);\n\n  if (props.loaded) {\n    return React.createElement(\"div\", {\n      className: \"row form-group clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-inline weatherMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4 leftData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"leftData location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, props.city), React.createElement(\"div\", {\n      className: \"leftData day-hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Tuesday, 00:45\"), React.createElement(\"div\", {\n      className: \"leftData weather-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"clear sky\"), React.createElement(\"div\", {\n      className: \"leftData temp-max-min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"14\\xBA/18\\xBA\")), React.createElement(\"div\", {\n      className: \"col-4 float:left current-weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://openweathermap.org/img/wn/01n@2x.png\"\n      /* {imgUrl} */\n      ,\n      className: \"weather-icon\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"current-temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"current-temperature-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), props.temperature, \"\\xBA\"))), React.createElement(\"ul\", {\n      className: \"col-4 weatherDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Pressure: \", React.createElement(\"span\", {\n      className: \"pressure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"1024 mb\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Humidity: \", React.createElement(\"span\", {\n      className: \"humidity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"67%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Wind: \", React.createElement(\"span\", {\n      className: \"wind-speed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \"2\", React.createElement(\"span\", {\n      className: \"wind-units\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"m/s\"))));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"row form-group clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-inline weatherMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-4 leftData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"leftData location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, city), React.createElement(\"div\", {\n      className: \"leftData day-hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, time), React.createElement(\"div\", {\n      className: \"leftData weather-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, description), React.createElement(\"div\", {\n      className: \"leftData temp-max-min\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, tempMax, \"\\xBA/\", tempMin, \"\\xBA\")), React.createElement(\"div\", {\n      className: \"col-4 float:left current-weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imgUrl,\n      className: \"weather-icon\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"current-temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"current-temperature-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), temperature, \"\\xBA\"))), React.createElement(\"ul\", {\n      className: \"col-4 weatherDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Pressure: \", React.createElement(\"span\", {\n      className: \"pressure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), pressure, \"mb\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Humidity: \", React.createElement(\"span\", {\n      className: \"humidity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), humidity, \"%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Wind: \", React.createElement(\"span\", {\n      className: \"wind-speed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \" \", windSpeed, React.createElement(\"span\", {\n      className: \"wind-units\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"m/s\"))));\n  }\n}","map":{"version":3,"sources":["C:/Users/diana/OneDrive/Documentos/react-weather-app/src/MainData.js"],"names":["React","useState","axios","MainData","props","temperature","setTemperature","icon","setIcon","tempMax","setTempMax","tempMin","setTempMin","time","setTime","description","setDescription","windSpeed","setWindSpeed","humidity","setHumidity","pressure","setPressure","updateTime","timestamp","date","Date","days","day","getDay","hours","getHours","minutes","getMinutes","handleResponse","response","data","weather","Math","round","main","temp","temp_max","temp_min","wind","speed","dt","timezone","imgUrl","city","apiKey","apiUrl","weatherApiUrl","get","then","loaded"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./MainData.css\";\r\n\r\nexport default function MainData(props) {\r\n  let [temperature, setTemperature] = useState(null);\r\n  let [icon, setIcon] = useState(null);\r\n  let [tempMax, setTempMax] = useState(null);\r\n  let [tempMin, setTempMin] = useState(null);\r\n  let [time, setTime] = useState(null);\r\n  let [description, setDescription] = useState(null);\r\n  let [windSpeed, setWindSpeed] = useState(null);\r\n  let [humidity, setHumidity] = useState(null);\r\n  let [pressure, setPressure] = useState(null);\r\n\r\n  function updateTime(timestamp) {\r\n    let date = new Date(timestamp);\r\n    let days = [\r\n      \"sunday\",\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\"\r\n    ];\r\n    let day = days[date.getDay()];\r\n    let hours = date.getHours();\r\n    if (hours < 10) {\r\n      hours = `0${hours}`;\r\n    }\r\n    let minutes = date.getMinutes();\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    setTime(`${day}, ${hours}:${minutes}`);\r\n  }\r\n\r\n  function handleResponse(response) {\r\n    setIcon(response.data.weather[0].icon);\r\n    setTemperature(Math.round(response.data.main.temp));\r\n    setTempMax(Math.round(response.data.main.temp_max));\r\n    setTempMin(Math.round(response.data.main.temp_min));\r\n    setPressure(response.data.main.pressure);\r\n    setHumidity(response.data.main.humidity);\r\n    setDescription(response.data.weather[0].description);\r\n    setWindSpeed(response.data.wind.speed);\r\n    updateTime(response.data.dt * 1000 + response.data.timezone * 1000);\r\n  }\r\n\r\n  let imgUrl = `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n  let city = \"Lisbon\";\r\n  let apiKey = \"1c79a9c19394dbdbf78cd6d4344cc928\";\r\n  let apiUrl = `https://api.openweathermap.org/data/2.5/`;\r\n  let weatherApiUrl = `${apiUrl}weather?q=${city}&appid=${apiKey}&units=metric`;\r\n  axios.get(weatherApiUrl).then(handleResponse);\r\n\r\n  if (props.loaded) {\r\n    return (\r\n      <div className=\"row form-group clearfix\">\r\n        <div className=\"form-inline weatherMain\">\r\n          <div className=\"col-4 leftData\">\r\n            <h4 className=\"leftData location\">{props.city}</h4>\r\n            <div className=\"leftData day-hour\">Tuesday, 00:45</div>\r\n            <div className=\"leftData weather-description\">clear sky</div>\r\n            <div className=\"leftData temp-max-min\">14º/18º</div>\r\n          </div>\r\n          <div className=\"col-4 float:left current-weather\">\r\n            <img\r\n              src=\"https://openweathermap.org/img/wn/01n@2x.png\" /* {imgUrl} */\r\n              className=\"weather-icon\"\r\n              alt=\"\"\r\n            />\r\n            <div className=\"current-temperature\">\r\n              <strong>\r\n                <span className=\"current-temperature-element\" />\r\n                {props.temperature}º\r\n              </strong>\r\n            </div>\r\n          </div>\r\n          <ul className=\"col-4 weatherDetails\">\r\n            <br />\r\n            <br />\r\n            <li>\r\n              Pressure: <span className=\"pressure\" />\r\n              1024 mb\r\n            </li>\r\n            <li>\r\n              Humidity: <span className=\"humidity\" />\r\n              67%\r\n            </li>\r\n            <li>\r\n              Wind: <span className=\"wind-speed\" />2\r\n              <span className=\"wind-units\" />\r\n              m/s\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"row form-group clearfix\">\r\n        <div className=\"form-inline weatherMain\">\r\n          <div className=\"col-4 leftData\">\r\n            <h4 className=\"leftData location\">{city}</h4>\r\n            <div className=\"leftData day-hour\">{time}</div>\r\n            <div className=\"leftData weather-description\">{description}</div>\r\n            <div className=\"leftData temp-max-min\">\r\n              {tempMax}º/{tempMin}º\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4 float:left current-weather\">\r\n            <img src={imgUrl} className=\"weather-icon\" alt=\"\" />\r\n            <div className=\"current-temperature\">\r\n              <strong>\r\n                <span className=\"current-temperature-element\" />\r\n                {temperature}º\r\n              </strong>\r\n            </div>\r\n          </div>\r\n          <ul className=\"col-4 weatherDetails\">\r\n            <br />\r\n            <br />\r\n            <li>\r\n              Pressure: <span className=\"pressure\" />\r\n              {pressure}mb\r\n            </li>\r\n            <li>\r\n              Humidity: <span className=\"humidity\" />\r\n              {humidity}%\r\n            </li>\r\n            <li>\r\n              Wind: <span className=\"wind-speed\" /> {windSpeed}\r\n              <span className=\"wind-units\" />\r\n              m/s\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}